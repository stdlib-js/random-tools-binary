"use strict";var P=function(t,r){return function(){return r||t((r={exports:{}}).exports,r),r.exports}};var N=P(function(_r,A){"use strict";var U=require("@stdlib/assert-is-plain-object"),w=require("@stdlib/assert-has-own-property"),W=require("@stdlib/array-base-assert-contains"),X=require("@stdlib/array-base-join"),C=require("@stdlib/string-format");function Y(t,r,e){return U(e)?w(e,"dtype")&&(t.dtype=e.dtype,!W(r,t.dtype))?new TypeError(C('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"dtype",X(r,'", "'),t.dtype)):(w(e,"order")&&(t.order=e.order),w(e,"mode")&&(t.mode=e.mode),w(e,"submode")&&(t.submode=e.submode),w(e,"readonly")&&(t.readonly=e.readonly),null):new TypeError(C("invalid argument. Options argument must be an object. Value: `%s`.",e))}A.exports=Y});var Q=P(function(jr,M){"use strict";var I=require("@stdlib/utils-define-nonenumerable-read-only-property"),Z=require("@stdlib/assert-is-nonnegative-integer-array").primitives,$=require("@stdlib/assert-is-empty-collection"),V=require("@stdlib/assert-is-ndarray-like"),G=require("@stdlib/assert-is-number").isPrimitive,rr=require("@stdlib/assert-is-function"),z=require("@stdlib/assert-is-complex-like"),er=require("@stdlib/assert-is-plain-object"),ar=require("@stdlib/assert-is-object"),_=require("@stdlib/assert-is-collection"),R=require("@stdlib/ndarray-base-assert-is-data-type"),tr=require("@stdlib/ndarray-base-assert-is-output-data-type-policy"),ir=require("@stdlib/ndarray-base-assert-is-read-only"),nr=require("@stdlib/ndarray-base-assert-is-order"),ur=require("@stdlib/assert-has-own-property"),x=require("@stdlib/array-base-assert-contains"),or=require("@stdlib/array-base-filled-by"),B=require("@stdlib/array-base-every-by"),D=require("@stdlib/array-base-join"),lr=require("@stdlib/strided-base-nullary"),H=require("@stdlib/ndarray-base-binary"),J=require("@stdlib/ndarray-base-maybe-broadcast-array"),T=require("@stdlib/ndarray-base-broadcast-scalar"),j=require("@stdlib/ndarray-base-shape2strides"),vr=require("@stdlib/ndarray-base-binary-output-dtype"),sr=require("@stdlib/ndarray-base-numel"),b=require("@stdlib/ndarray-base-buffer"),dr=require("@stdlib/ndarray-shape"),F=require("@stdlib/ndarray-dtype"),K=require("@stdlib/ndarray-order"),fr=require("@stdlib/ndarray-ndims"),S=require("@stdlib/ndarray-ctor"),gr=require("@stdlib/ndarray-defaults"),yr=require("@stdlib/array-base-assert-is-accessor-array"),mr=require("@stdlib/array-base-accessor-setter"),cr=require("@stdlib/array-base-setter"),f=require("@stdlib/string-format"),hr=N(),k=["First","Second","Third"];function pr(t){var r,e,a,n;for(r=[],n=0;n<t.length;n++)e=t[n],a={scalar:!0,value:e,dtype:"",ndims:0,order:""},G(e)?a.dtype="float64":z(e)?e.byteLength===8?a.dtype="complex64":a.dtype="complex128":V(e)?(a.scalar=!1,a.dtype=F(e),a.ndims=fr(e),a.order=K(e)):a.dtype="generic",r.push(a);return r}function wr(t){var r,e,a;for(r=0,a=0;a<t.length;a++)e=t[a],(e.scalar||e.ndims===0)&&(r+=1);return r===t.length}function qr(t){var r,e;for(e=0;e<t.length;e++)r=t[e],r.scalar===!1&&(r.scalar=!0,r.value=r.value.get(),r.ndims=0,r.order="");return t}function br(t){var r,e;for(e=0;e<t.length&&(r=t[e],r.scalar!==!1);e++);return r.order}function Tr(t,r){var e,a,n;for(e=br(r),n=0;n<r.length;n++)a=r[n],a.scalar?(a.scalar=!1,a.value=T(a.value,a.dtype,t,e),a.order=e):a.value=J(a.value,t),a.ndims=t.length;return r}function h(t,r,e,a,n){var i,v;if(!(this instanceof h))return arguments.length<5?new h(t,r,e,a):new h(t,r,e,a,n);if(!rr(t))throw new TypeError(f("invalid argument. First argument must be a function. Value: `%s`.",t));if(!_(r))throw new TypeError(f("invalid argument. Second argument must be an array-like object. Value: `%s`.",r));for(v=0;v<r.length;v++)if(!_(r[v])||r[v].length<1||!B(r[v],R))throw new TypeError(f("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",r));if(!_(e)||e.length<1||!B(e,R))throw new TypeError(f("invalid argument. Third argument must be an array of data types. Value: `%s`.",e));if(!ar(a))throw new TypeError(f("invalid argument. Fourth argument must be an object. Value: `%s`.",a));if(!tr(a.output))throw new TypeError(f("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",a.output));if(i={order:gr.get("order")},arguments.length>4){if(!er(n))throw new TypeError(f("invalid argument. Options argument must be an object. Value: `%s`.",n));if(ur(n,"order")&&(i.order=n.order,!nr(i.order)))throw new TypeError(f("invalid option. `%s` option must be a valid memory layout. Option: `%s`.","order",i.order))}return this._prng=t,this._idtypes=r,this._odtypes=e,this._policies={output:a.output},this._opts=i,this}I(h.prototype,"generate",function(r,e,a,n){var i,v,d,o,u,l,g,q,E,O,s,y,c,p,m;if(!Z(r)&&!$(r))throw new TypeError(f("invalid argument. First argument must be an array-like object containing nonnegative integers. Value: `%s`.",r));if(d={},arguments.length>3&&(u=hr(d,this._odtypes,n),u))throw u;for(i=pr([e,a]),m=0;m<i.length;m++)if(s=i[m].dtype,!x(this._idtypes[m],s))throw new TypeError(f('invalid argument. %s argument must have one of the following data types: "%s". Data type: `%s`.',k[m+1],D(this._idtypes[m],'", "'),s));if(q=wr(i),q?i=qr(i):i=Tr(r,i),c=i[0],p=i[1],v=this._prng,s=d.dtype||vr(c.dtype,p.dtype,this._policies.output),d.order?g=d.order:q?g=this._opts.order:g=c.order,l=sr(r),l===0)return r.length===0?(o=b(s,1),yr(o)?O=mr(s):O=cr(s),O(o,0,v(c.value,p.value)),y=[0]):(o=b(s,l),y=j(r,g)),new S(s,o,r,y,0,g,d);if(q)return s==="generic"?o=or(l,L):(o=b(s,l),lr([o],[l],[1],L)),y=j(r,g),new S(s,o,r,y,0,g,d);return o=b(s,l),y=j(r,g),E=new S(s,o,r,y,0,g,d),H([c.value,p.value,E],v),E;function L(){return v(c.value,p.value)}});I(h.prototype,"assign",function(r,e,a){var n,i,v,d,o,u,l;if(!V(a))throw new TypeError(f("invalid argument. Third argument must be an ndarray-like object. Value: `%s`.",a));if(ir(a))throw new Error("invalid argument. The output ndarray must be writable. Cannot write to a read-only ndarray.");if(o=dr(a),d=K(a),v=F(a),!x(this._odtypes,v))throw new TypeError(f('invalid argument. %s argument must have one of the following data types: "%s". Data type: `%s`.',k[2],D(this._odtypes,'", "'),v));for(n=[r,e],l=0;l<n.length;l++){if(u=n[l],G(u)?(i="float64",u=T(u,i,o,d)):z(u)?(u.byteLength===8?i="complex64":i="complex128",u=T(u,i,o,d)):V(u)?(i=F(u),u=J(u,o)):(i="generic",u=T(u,i,o,d)),!x(this._idtypes[l],i))throw new TypeError(f('invalid argument. %s argument must have one of the following data types: "%s". Data type: `%s`.',k[l],D(this._idtypes[l],'", "'),i));n[l]=u}return n.push(a),H(n,this._prng),a});M.exports=h});var Er=Q();module.exports=Er;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
